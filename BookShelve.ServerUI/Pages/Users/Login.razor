@page "/users/login"
@inject IAuthService _authService
@inject NavigationManager _navManager

<h3>Login</h3>

<div>
    <EditForm Model="LoginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="email">Email Address</label>
            <InputText class="form-control" @bind-Value="LoginModel.UserEmail" />
            <ValidationMessage For="@(() => LoginModel.UserEmail)" />
        </div>

        <div class="form-group">
            <label for="email">Password</label>
            <InputText class="form-control" type="password" @bind-Value="LoginModel.Password" />
            <ValidationMessage For="@(() => LoginModel.Password)" />
        </div>
        <br />

        <button type="submit" class="btn btn-success">Login</button>
    </EditForm>
</div>

@code {
    LoginUserDto LoginModel = new();
    string message = "";
    public async Task HandleLogin()
    {
        try
        {
            var response = await _authService.AuthenticateAsync(LoginModel);

            if (response)
            {
                _navManager.NavigateTo("/");
            }

            message = "Invalid username or password";

        }
        catch (ApiException ex)
        {
            if (ex.StatusCode >= 200 && ex.StatusCode <= 299)
            {
                
            }
            message = ex.Response;
        }
    }
}
