@page "/authors/"
@inject IAuthorService _authorService
<h3>Authors</h3>

@if(response.IsSuccess == false)
{
    <div class="alert alert-danger">
        <h4>@response.Message</h4>
    </div>
}


@if (Authors == null)
{
    <div class="alert alert-info">
        <h4>Loading Data...</h4>
    </div>
}
else
{
    <a class="btn btn-dark" href="/authors/create" ><span class="oi oi-plus" aria-hidden="true"></span> Add Author</a>
    <br />

    <table class="table table-responsive">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Action</th>
                <th></th>
            </tr>
        </thead>
       
        <tbody>
            @foreach (var author in Authors)
            {
                <tr>
                    <td>@author.FirstName</td>
                    <td>@author.LastName</td>
                    <td>
                        <a class="btn btn-primary" href="/authors/details"> <span class="oi oi-plus" aria-hidden="true"></span>Details</a>
                        <a class="btn btn-warning" href="/authors/edit"> <span class="oi oi-pencil" aria-hidden="true"></span>Edit</a>
                        <a class="btn btn-danger" href="/authors/delete"> <span class="oi oi-delete" aria-hidden="true"></span>Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private List<ReadAuthorDto> Authors;

    private Response<List<ReadAuthorDto>> response = new Response<List<ReadAuthorDto>> { IsSuccess = true };

    protected override async Task OnInitializedAsync()
    {
        response = await _authorService.GetAuthorsAsync();

        if(response.IsSuccess)
        {
            Authors = response.Data;
        }
    }
}
